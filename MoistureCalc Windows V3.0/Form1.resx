<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAMAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD3AgAA9wAAAPcAAAD3AwAA9wYAAPcVAAD3EAAA9zcAAPcuAAD3AAAA9wAAAPcAAAD3AAAA9wAA
        APcCAAD3AgAA9wMAAPcAAAD3AAAA9ycAAPdAAAD3DwAA9zgAAPdFAAD3PgAA9ygAAPcAAAD3AAAA9wAA
        APcAAAD3AAAA9wkAAPcAAAD3BwAA9xkAAPdGAAD3bAAA938AAPcSAAD3MwAA9yIAAPcWAAD3FQAA9woA
        APcRAAD3AAAA9wAAAPcSAQD3AwAA9yIAAPeVHyP3tTxB98SLjPeZQTr3ZgQE91QBAfcpAQH3KwMD9zEB
        AfccAAD3AAAA9wAAAPcAAAD3AQAA9xAAAPfKAAD3IAAA9zYAAPc2AAD41AAA99QAAPduY2P5SAkI+UoA
        APdCAAD4IwAA+BIAAPgAAAD+AAAA+BMBAPcNAAD4DQAA/JhYUfl5Bgb5nicj+WFVU/tpNDL8WgsM/Iof
        Ivt8env6fmBY+2sZF/szCQj7AwEB/gAAAPcVAgD3HgEA90YzMfwqAAD5NAAA97cAAPeBRkr7XQAA930A
        APcOAAD3wgAA+LS0tPdEAAD3IQAA919TUvwMAQD3AAAA9wAAAPcAAAD3CwAA9xEAAPc+AAD38QAA9xIQ
        EPcAAAD3AAAA9wQAAPf9AAD3nXt39yQAAPcVAAD3EQQD9wAAAPcAAAD3AAAA9w4AAPcAAAD3EwAA90QA
        APflAgT3CAEB9wAAAPc3AAD3+QAA993Y1/cfAAD3DAAA9wAAAPcAAAD3AAAA9wAAAPcAAAD3AQAA9xwA
        APdnAAD37wAA931AQvcmAAD3NwAA9/cGFffAj4n3JgAA9wkAAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wAA
        APcAAAD3LAAA9zcAAPf2AAD3Uh4a97MAAPfXWF73RwQB9w4AAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wUA
        APcJAAD3FgAA9ywAAPcnAAD3JAAA968AAve+ICb3MgEB9xYAAPcJAAD3AAAA9wAAAPcAAAD3AAAA9wAA
        APcMAAD3AAAA9wcAAPcQAAD3pgAA998ECvdMAQH3CwAA9wAAAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wAA
        APcAAAD3AwAA9+0AAPfjAAD3lwAA9xwAAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wAAAPcCAAD3AAAA9wAA
        APcAAAD3AAAA9wAAAPcCAAD3AAAA9wIAAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wAAAPcAAAD3AAAA9wAA
        APcAAAD3AAAA9wAAAPcAAAD3AAAA9wMAAPcDAAD3AAAA9wAAAPcAAAD3BAAA9wQAAPcAAAD3AAAA9wAA
        APcAAAD3////////////////////////////////////////////////////////////////////////
        /////////////w==
</value>
  </data>
</root>